version: "3"

services:

  transition:
    build: .
    environment:
      DATABASE_URL: postgres://postgres:${POSTGRES_PASS}@${POSTGRES_URL}:5432/transition
      REDIS_URL: redis://${REDIS_URL}:6379
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      AUTH0_CLIENT_ID: "${AUTH0_CLIENT_ID}"
      AUTH0_CLIENT_SECRET: "${AUTH0_CLIENT_SECRET}"
      AUTH0_DOMAIN: "${AUTH0_DOMAIN}"
      RAILS_SERVE_STATIC_FILES: "enabled"
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_REGION: "${AWS_REGION}"
      LOG_BUCKET_NAME: "${LOG_BUCKET_NAME}"
    ports:
      - "3000:3000"

  sidekiq:
    build: .
    environment:
      DATABASE_URL: postgres://postgres:${POSTGRES_PASS}@${POSTGRES_URL}:5432/transition
      REDIS_URL: redis://${REDIS_URL}:6379
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_REGION: "${AWS_REGION}"
      LOG_BUCKET_NAME: "${LOG_BUCKET_NAME}"
    command: bundle exec sidekiq -C config/sidekiq.yml

  bouncer:
    image: thedxw/bouncer
    environment:
      DATABASE_URL: postgres://postgres:${POSTGRES_PASS}@${POSTGRES_URL}:5432/transition
    ports:
      - "3049:3049"

  nginx: 
    image: nginx:stable
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
      - 443:443
    depends_on:
      - bouncer
      - transition
    links:
      - bouncer
      - transition
